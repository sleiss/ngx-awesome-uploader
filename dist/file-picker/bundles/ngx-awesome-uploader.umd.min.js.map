{"version":3,"sources":["../../../projects/file-picker/src/lib/file-picker.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/file-picker/src/lib/validation-error.model.ts","../../../projects/file-picker/src/lib/default-captions.ts","../../../projects/file-picker/src/lib/file-picker.constants.ts","../../../projects/file-picker/src/lib/file-drop/upload-file.model.ts","../../../projects/file-picker/src/lib/file-drop/upload-event.model.ts","../../../projects/file-picker/src/lib/icons/cloud-icon/cloud-icon.component.ts","../../../projects/file-picker/src/lib/file-drop/file-drop.component.html","../../../projects/file-picker/src/lib/icons/cloud-icon/cloud-icon.component.html","../../../projects/file-picker/src/lib/file-drop/file-drop.component.ts","../../../projects/file-picker/src/lib/icons/close-icon/close-icon.component.ts","../../../projects/file-picker/src/lib/icons/close-icon/close-icon.component.html","../../../projects/file-picker/src/lib/file-picker.adapter.ts","../../../projects/file-picker/src/lib/file-preview-container/preview-lightbox/preview-lightbox.component.ts","../../../projects/file-picker/src/lib/file-preview-container/preview-lightbox/preview-lightbox.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.ts","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/file-preview-item.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/file-preview-item.component.ts","../../../projects/file-picker/src/lib/file-upload.utils.ts","../../../projects/file-picker/src/lib/file-preview-container/file-preview-container.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-container.component.ts","../../../projects/file-picker/src/lib/file-picker.component.html","../../../projects/file-picker/src/lib/file-picker.component.ts","../../../projects/file-picker/src/lib/file-drop/file-drop.module.ts","../../../projects/file-picker/src/lib/file-picker.module.ts"],"names":["FilePickerService","sanitizer","this","prototype","mockUploadFile","formData","event","CustomEvent","detail","type","of","createSafeUrl","file","url","window","URL","createObjectURL","bypassSecurityTrustResourceUrl","er","console","log","i0","ɵɵinject","i1","DomSanitizer","factory","ɵfac","Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","FileValidationTypes","DefaultCaptions","dropzone","title","or","browse","cropper","crop","cancel","previewCard","remove","uploadError","DEFAULT_CROPPER_OPTIONS","dragMode","aspectRatio","autoCrop","movable","zoomable","scalable","autoCropArea","BITS_TO_MB","size","parseFloat","toString","UploadFile","relativePath","fileEntry","UploadEvent","files","CloudIconComponent","ngOnInit","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","selectors","decls","vars","consts","template","rf","ctx","i0.ɵɵnamespaceSVG","FileComponent","zone","renderer","_this","customstyle","disableIf","onFileDrop","EventEmitter","onFileOver","onFileLeave","stack","dragoverflag","globalDisable","numOfActiveReadEntries","globalStart","listen","evt","globalEnd","onDragOver","emit","preventAndStop","onDragLeave","dropFiles","dataTransfer","dropEffect","items","entry","webkitGetAsEntry","isFile","toUpload","name","this_1","addToQueue","isDirectory","traverseFileTree","file_1","fakeFileEntry","callback","timerObservable","timer","subscription","subscribe","t","item","path","run","popToStack","pushToStack","dirReader_1","createReader","entries_1","thisObj_1","readEntries_1","readEntries","res","toUpload_1","str","pop","clearQueue","stopPropagation","preventDefault","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","NgZone","Renderer2","inputs","captions","outputs","ngContentSelectors","i0.ɵɵlistener","$event","i0.ɵɵprojection","i0.ɵɵtemplate","i0.ɵɵclassProp","i0.ɵɵproperty","CloseIconComponent","UploadStatus","PreviewLightboxComponent","previewClose","getSafeUrl","safeUrl","onClose","ɵɵpureFunction1","_c0$1","loaded","RefreshIconComponent","ctx_r9","imageClicked","fileItem","i0.ɵɵtextInterpolate","i0.ɵɵpropertyInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵelementContainer","FilePreviewItemComponent","fileService","removeFile","uploadSuccess","uploadFail","fileType","uploadResponse","_uploadFile","fileName","substr","lastIndexOf","toUpperCase","isImageFile","includes","niceBytes","x","l","parseInt","toFixed","onRetry","onRemove","_uploadUnsubscribe","assign","enableAutoUpload","adapter","_uploadSubscription","uploadFile","status","UPLOADED","_onUploadSuccess","body","uploadProgress","undefined","IN_PROGRESS","progress","ERROR","warn","ɵɵrestoreView","_r6_1","ɵɵnextContext","openLightbox","ctx_r1","itemTemplate","ɵɵpureFunction2","_c2","FilePreviewContainerComponent","lightboxFile","closeLightbox","click","ctx_r0","_r12_1","onUploadSuccess","onUploadFail","ctx_r3","previewFiles","FilePickerComponent","elementRef","removeSuccess","validationError","fileAdded","fileRemoved","enableCropper","showeDragDropZone","showPreviewContainer","uploadType","croppedCanvasOptions","filesForCropper","_cropClosed$","Subject","_onDestroy$","_setCropperOptions","_listenToCropClose","complete","onChange","Array","from","handleFiles","dropped","filesForUpload","files_1","files_1_1","droppedFile","setTimeout","onRemoveSuccess","removeFileFromList","pipe","takeUntil","croppedIndex","findIndex","nextFile","filter","openCropper","cropperOptions","_setDefaultCropperOptions","isValidMaxFileCount","isValidUploadSync","every","_validateFileSync","asyncFunctions","map","_validateFileAsync","combineLatest","isValidUploadAsync","result","forEach","index","handleInputFile","isValidUploadType","isValidExtension","customValidator","tap","fileExtension","currentCropperFile","isValidSize","pushFile","fileMaxCount","CROPPER","Cropper","safeCropImgUrl","cropperImgLoaded","image","document","getElementById","closeCropper","filePreview","f","fileExtensions","extension","split","ext","toLowerCase","indexOf","extensions","isValidFileSize","isValidTotalFileSize","fileMaxSize","totalBits","reduce","acc","curr","totalMaxSize","onCropSubmit","getCroppedCanvas","toBlob","_blobFallBack","bind","blob","ElementRef","accept","dropzoneTemplate","_r15_1","_r1","ɵɵreference","FileDropModule","bootstrap","providers","imports","CommonModule","declarations","exports","FilePickerModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Injectable()\nexport class FilePickerService {\n  constructor(private sanitizer: DomSanitizer) { }\n  mockUploadFile(formData): Observable<any> {\n    const event = new CustomEvent('customevent', {\n      detail: {\n        type: 'UploadProgreess'\n      }\n    });\n    return of (event.detail);\n  }\n  createSafeUrl(file): SafeResourceUrl {\n    try {\n      const url = window.URL.createObjectURL(file);\n      const safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n      return safeUrl;\n    } catch (er) {\n      console.log(er);\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export interface ValidationError {\n  file: File;\n  error: string; // is FileValidationType enum type\n}\nexport enum FileValidationTypes {\n  fileMaxSize = 'FILE_MAX_SIZE',\n  fileMaxCount = 'FILE_MAX_COUNT',\n  totalMaxSize = 'TOTAL_MAX_SIZE',\n  extensions = 'EXTENSIONS',\n  uploadType = 'UPLOAD_TYPE',\n  customValidator = 'CUSTOM_VALIDATOR'\n}\n","import { UploaderCaptions } from './uploader-captions';\n\nexport const DefaultCaptions: UploaderCaptions = {\n    dropzone: {\n        title: 'Drag and drop file here',\n        or: 'or',\n        browse: 'Browse Files'\n    },\n    cropper: {\n        crop: 'Crop',\n        cancel: 'Cancel'\n    },\n    previewCard: {\n        remove: 'Remove',\n        uploadError: 'Error on upload'\n    }\n};\n","export const DEFAULT_CROPPER_OPTIONS = {\n    dragMode: 'crop',\n    aspectRatio: 1,\n    autoCrop: true,\n    movable: true,\n    zoomable: true,\n    scalable: true,\n    autoCropArea: 0.8\n};\n\nexport function BITS_TO_MB(size: number): number {\n   return parseFloat(size.toString()) / 1048576;\n}\n","import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\n\n/**\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\n * properties of the given {@link FileSystemEntry}.\n */\nexport class UploadFile {\n    constructor(\n        public relativePath: string,\n        public fileEntry: FileSystemEntry) {\n    }\n}\n","import { UploadFile } from './upload-file.model';\n\nexport class UploadEvent {\n    constructor(\n        public files: UploadFile[]) {\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cloud-icon',\n  templateUrl: './cloud-icon.component.html',\n  styleUrls: ['./cloud-icon.component.scss']\n})\nexport class CloudIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"dropZone\"  [className]=\"customstyle\" [class.over]=\"dragoverflag\"\n    (drop)=\"dropFiles($event)\"\n    (dragover)=\"onDragOver($event)\" (dragleave)=\"onDragLeave($event)\">\n\n    <div #ref class=\"custom-dropzone\" >\n      <ng-content></ng-content>\n      </div>\n\n    <div class=\"content\" *ngIf=\"ref.children?.length == 0\">\n             <cloud-icon class=\"cloud-icon\"></cloud-icon>\n              <div class=\"content-top-text\">\n                {{captions?.dropzone?.title}}\n              </div>\n              <div class=\"content-center-text\">\n                {{captions?.dropzone?.or}}\n              </div>\n              <button class=\"file-browse-button\" type=\"button\">\n                {{captions?.dropzone?.browse}}\n              </button>\n    </div>\n</div>\n","    <!-- <div class=\"cloud-upload-icon\"><i></i></div> -->\n\n    <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"42px\" height=\"42px\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"/>\n    </svg>","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { timer, Subscription } from 'rxjs';\n\nimport { UploadFile } from './upload-file.model';\nimport { UploadEvent } from './upload-event.model';\nimport {\n  FileSystemFileEntry,\n  FileSystemEntry,\n  FileSystemDirectoryEntry\n} from './dom.types';\nimport { UploaderCaptions } from '../uploader-captions';\n\n@Component({\n  selector: 'file-drop',\n  templateUrl: './file-drop.component.html',\n  styleUrls: ['./file-drop.component.scss']\n})\nexport class FileComponent implements OnDestroy {\n  @Input()\n  captions: UploaderCaptions;\n  @Input()\n  customstyle: string = null;\n  @Input()\n  disableIf = false;\n\n  @Output()\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<UploadEvent>();\n  @Output()\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\n\n  stack = [];\n  files: UploadFile[] = [];\n  subscription: Subscription;\n  dragoverflag = false;\n\n  globalDisable = false;\n  globalStart: () => void;\n  globalEnd: () => void;\n\n  numOfActiveReadEntries = 0;\n  constructor(private zone: NgZone, private renderer: Renderer2) {\n    if (!this.customstyle) {\n      this.customstyle = 'drop-zone';\n    }\n    this.globalStart = this.renderer.listen('document', 'dragstart', evt => {\n      this.globalDisable = true;\n    });\n    this.globalEnd = this.renderer.listen('document', 'dragend', evt => {\n      this.globalDisable = false;\n    });\n  }\n  public onDragOver(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (!this.dragoverflag) {\n        this.dragoverflag = true;\n        this.onFileOver.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  public onDragLeave(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (this.dragoverflag) {\n        this.dragoverflag = false;\n        this.onFileLeave.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  dropFiles(event: any) {\n    if (!this.globalDisable && !this.disableIf) {\n      this.dragoverflag = false;\n      event.dataTransfer.dropEffect = 'copy';\n      let length;\n      if (event.dataTransfer.items) {\n        length = event.dataTransfer.items.length;\n      } else {\n        length = event.dataTransfer.files.length;\n      }\n\n      for (let i = 0; i < length; i++) {\n        let entry: FileSystemEntry;\n        if (event.dataTransfer.items) {\n          if (event.dataTransfer.items[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.items[i].webkitGetAsEntry();\n          }\n        } else {\n          if (event.dataTransfer.files[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.files[i].webkitGetAsEntry();\n          }\n        }\n        if (!entry) {\n          const file: File = event.dataTransfer.files[i];\n          if (file) {\n            const fakeFileEntry: FileSystemFileEntry = {\n              name: file.name,\n              isDirectory: false,\n              isFile: true,\n              file: (callback: (filea: File) => void): void => {\n                callback(file);\n              }\n            };\n            const toUpload: UploadFile = new UploadFile(\n              fakeFileEntry.name,\n              fakeFileEntry\n            );\n            this.addToQueue(toUpload);\n          }\n        } else {\n          if (entry.isFile) {\n            const toUpload: UploadFile = new UploadFile(entry.name, entry);\n            this.addToQueue(toUpload);\n          } else if (entry.isDirectory) {\n            this.traverseFileTree(entry, entry.name);\n          }\n        }\n      }\n\n      this.preventAndStop(event);\n\n      const timerObservable = timer(200, 200);\n      this.subscription = timerObservable.subscribe(t => {\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\n          this.onFileDrop.emit(new UploadEvent(this.files));\n          this.files = [];\n        }\n      });\n    }\n  }\n\n  private traverseFileTree(item: FileSystemEntry, path: string) {\n    if (item.isFile) {\n      const toUpload: UploadFile = new UploadFile(path, item);\n      this.files.push(toUpload);\n      this.zone.run(() => {\n        this.popToStack();\n      });\n    } else {\n      this.pushToStack(path);\n      path = path + '/';\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\n      let entries = [];\n      const thisObj = this;\n\n      const readEntries = () => {\n        thisObj.numOfActiveReadEntries++;\n        dirReader.readEntries((res) => {\n          if (!res.length) {\n            // add empty folders\n            if (entries.length === 0) {\n              const toUpload: UploadFile = new UploadFile(path, item);\n              thisObj.zone.run(() => {\n                thisObj.addToQueue(toUpload);\n              });\n            } else {\n              for (let i = 0; i < entries.length; i++) {\n                thisObj.zone.run(() => {\n                  thisObj.traverseFileTree(entries[i], path + entries[i].name);\n                });\n              }\n            }\n            thisObj.zone.run(() => {\n              thisObj.popToStack();\n            });\n          } else {\n            // continue with the reading\n            entries = entries.concat(res);\n            readEntries();\n          }\n          thisObj.numOfActiveReadEntries--;\n        });\n      };\n\n      readEntries();\n    }\n  }\n\n  private addToQueue(item: UploadFile) {\n    this.files.push(item);\n  }\n\n  pushToStack(str) {\n    this.stack.push(str);\n  }\n\n  popToStack() {\n    const value = this.stack.pop();\n  }\n\n  private clearQueue() {\n    this.files = [];\n  }\n\n  private preventAndStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.globalStart();\n    this.globalEnd();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'close-icon',\n  templateUrl: './close-icon.component.html',\n  styleUrls: ['./close-icon.component.scss']\n})\nexport class CloseIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\n width=\"18px\" height=\"18px\">\n <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n</svg>","import { FilePreviewModel } from './file-preview.model';\nimport { Observable } from 'rxjs';\n\nexport interface UploadResponse {\n    body?: any;\n    status: UploadStatus;\n    progress?: number;\n}\n\nexport enum UploadStatus {\n   UPLOADED = 'UPLOADED',\n   IN_PROGRESS = 'IN PROGRESS',\n   ERROR = 'ERROR'\n}\n\nexport abstract class FilePickerAdapter {\n public abstract uploadFile(fileItem: FilePreviewModel): Observable<UploadResponse>;\n public abstract removeFile(fileItem: FilePreviewModel): Observable<any>;\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FilePreviewModel } from '../../file-preview.model';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'preview-lightbox',\n  templateUrl: './preview-lightbox.component.html',\n  styleUrls: ['./preview-lightbox.component.scss']\n})\nexport class PreviewLightboxComponent implements OnInit {\n  @Input() file: FilePreviewModel;\n  @Output() previewClose = new EventEmitter<void>();\n  loaded: boolean;\n  safeUrl: SafeResourceUrl;\n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.getSafeUrl(this.file.file);\n  }\n  getSafeUrl(file: File | Blob): void {\n    const url = window.URL.createObjectURL(file);\n    this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n  onClose(event): void {\n   this.previewClose.next();\n  }\n\n}\n","<div class=\"ng-modal-backdrop\" (click)=\"onClose($event)\">\n\n</div>\n\n<div class=\"ng-modal-content\" >\n  <div class=\"close-icon-wrapper\" (click)=\"onClose($event)\">\n      <close-icon></close-icon>\n  </div>\n  <div class=\"lightbox-item\" >\n    <img [src]=\"safeUrl\" (load)=\"loaded = true\" [ngStyle]=\"{'visibility': loaded ? 'visible' : 'hidden'}\">\n  </div>\n </div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'refresh-icon',\n  templateUrl: './refresh-icon.component.html',\n  styleUrls: ['./refresh-icon.component.scss']\n})\nexport class RefreshIconComponent {\n\n}\n","    <div class=\"file-preview-wrapper\" *ngIf=\"fileItem\" [ngClass] = \"{'visually-hidden': itemTemplate}\">\n\n\n        <div class=\"file-preview-thumbnail\">\n          <div class=\"img-preview-thumbnail\" *ngIf=\"isImageFile && fileItem?.file\" >\n            <img [src]=\"safeUrl\" (click)=\"imageClicked.next(fileItem)\">\n          </div>\n          <div class=\"other-preview-thumbnail\"\n            *ngIf=\"!isImageFile || !fileItem?.file\"\n            [ngClass]=\"fileItem.fileName.split('.').pop()\"\n            >\n            {{fileType}}\n          </div>\n          <div class=\"thumbnail-backdrop\">\n\n          </div>\n        </div>\n        <div class=\"file-preview-description\" >\n          <a class=\"file-preview-title\" [title]=\"fileItem.fileName\" href=\"javascript:void(0)\"><p>{{fileItem.fileName}}</p></a>\n          <div class=\"file-preview-size\" *ngIf=\"fileItem?.file\">{{niceBytes(fileItem.file?.size)}}</div>\n        </div>\n        <div class=\"file-preview-actions\" >\n            <div class=\"ngx-checkmark-wrapper\" *ngIf=\"!uploadError && !uploadProgress && fileItem?.file\">\n              <span class=\"ngx-checkmark\"></span>\n            </div>\n            <refresh-icon *ngIf=\"uploadError\" (click)=\"onRetry()\"></refresh-icon>\n            <a class=\"ngx-close-icon-wrapper\"\n            (click)=\"onRemove(fileItem)\"\n             title=\"{{captions?.previewCard?.remove}}\"\n             >\n              <close-icon class=\"ngx-close-icon\"></close-icon>\n            </a>\n        </div>\n          <a class=\"file-upload-error-wrapper\" *ngIf=\"uploadError && !uploadProgress\" href=\"javascipt:void(0)\"\n          title=\"{{captions?.previewCard?.uploadError}}\">\n          </a>\n\n        <ng-container *ngIf=\"uploadProgress\">\n        <div class=\"file-upload-progress-bar-wrapper\"  >\n          <div class=\"file-upload-progress-bar\"  [ngStyle]=\"{ 'width': uploadProgress + '%' }\">\n          </div>\n        </div>\n\n        <div class=\"file-upload-percentage-wrapper\" >\n          <div class=\"file-upload-percentage\">{{uploadProgress}} %</div>\n          </div>\n        </ng-container>\n\n      </div>\n\n<ng-container *ngTemplateOutlet=\"itemTemplate;context: {fileItem: fileItem, uploadProgress: uploadProgress}\" > </ng-container>\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/>\n</svg>","import { FilePickerService } from './../../file-picker.service';\nimport { FilePreviewModel } from './../../file-preview.model';\nimport { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { GET_FILE_CATEGORY_TYPE, GET_FILE_TYPE, IS_IMAGE_FILE } from '../../file-upload.utils';\nimport {  Subscription } from 'rxjs';\nimport { FilePickerAdapter, UploadResponse, UploadStatus } from '../../file-picker.adapter';\nimport { UploaderCaptions } from '../../uploader-captions';\n\n@Component({\n  selector: 'file-preview-item',\n  templateUrl: './file-preview-item.component.html',\n  styleUrls: ['./file-preview-item.component.scss']\n})\nexport class FilePreviewItemComponent implements OnInit {\n  @Output() public readonly removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  @Output() public readonly imageClicked = new EventEmitter<FilePreviewModel>();\n  @Input() public fileItem: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() captions: UploaderCaptions;\n  @Input() enableAutoUpload: boolean;\n  public uploadProgress: number;\n  public isImageFile: boolean;\n  public fileType: string;\n  public safeUrl: SafeResourceUrl;\n  public uploadError: boolean;\n  public uploadResponse: any;\n  private _uploadSubscription: Subscription;\n  constructor(\n    private fileService: FilePickerService,\n  ) {}\n\n  public ngOnInit() {\n    if (this.fileItem.file) {\n      if (this.fileItem.uploadResponse) {\n        this.uploadResponse = this.fileItem.uploadResponse;\n      } else {\n        this._uploadFile(this.fileItem);\n      }\n      this.safeUrl = this.getSafeUrl(this.fileItem.file);\n    }\n    this.fileType = GET_FILE_TYPE(this.fileItem.fileName);\n    this.isImageFile = IS_IMAGE_FILE(this.fileType);\n  }\n\n  public getSafeUrl(file: File | Blob): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n  /** Converts bytes to nice size */\n  niceBytes(x): string {\n    const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let l = 0;\n    let n = parseInt(x, 10) || 0;\n    while (n >= 1024 && ++l) {\n      n = n / 1024;\n    }\n    // include a decimal point and a tenths-place digit if presenting\n    // less than ten of KB or greater units\n    return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n  }\n  /** Retry file upload when upload was unsuccessfull */\n  public onRetry(): void {\n    this._uploadFile(this.fileItem);\n  }\n\n  public onRemove(fileItem: FilePreviewModel): void {\n    this._uploadUnsubscribe();\n    this.removeFile.next({\n      ...fileItem,\n      uploadResponse: this.uploadResponse\n    });\n   }\n\n  private _uploadFile(fileItem: FilePreviewModel): void {\n    if (!this.enableAutoUpload) {\n      return;\n    }\n    if (this.adapter) {\n      this._uploadSubscription =\n      this.adapter.uploadFile(fileItem)\n      .subscribe((res: UploadResponse) => {\n        if (res && res.status === UploadStatus.UPLOADED) {\n          this._onUploadSuccess(res.body, fileItem);\n          this.uploadProgress = undefined;\n        }\n        if (res && res.status === UploadStatus.IN_PROGRESS) {\n          this.uploadProgress = res.progress;\n        }\n        if (res && res.status === UploadStatus.ERROR) {\n          this.uploadError = true;\n          this.uploadFail.next(res.body);\n          this.uploadProgress = undefined;\n        }\n      }, (er: HttpErrorResponse) => {\n        this.uploadError = true;\n        this.uploadFail.next(er);\n        this.uploadProgress = undefined;\n  });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n  /** Emits event when file upload api returns success  */\n  private _onUploadSuccess(uploadResponse: any, fileItem: FilePreviewModel): void {\n    this.uploadResponse = uploadResponse;\n    this.fileItem.uploadResponse = uploadResponse;\n    this.uploadSuccess.next({...fileItem, uploadResponse});\n  }\n\n /** Cancel upload. Cancels request  */\n private _uploadUnsubscribe(): void {\n  if (this._uploadSubscription) {\n    this._uploadSubscription.unsubscribe();\n   }\n }\n\n}\n","export function GET_FILE_CATEGORY_TYPE(fileExtension: string): string {\n  if (fileExtension.includes('image')) {\n    return 'image';\n  } else if (fileExtension.includes('video')) {\n    return 'video';\n  } else {\n    return 'other';\n  }\n}\n\nexport function GET_FILE_TYPE(name: string): string {\n  return name.substr(name.lastIndexOf('.') + 1).toUpperCase();\n}\n\nexport function IS_IMAGE_FILE(fileType: string): boolean {\n  const IMAGE_TYPES = ['PNG', 'JPG', 'JPEG', 'BMP', 'WEBP', 'JFIF', 'TIFF'];\n  return (IMAGE_TYPES as any).includes(fileType.toUpperCase());\n}\n","<preview-lightbox *ngIf=\"lightboxFile\" [file]=\"lightboxFile\" (previewClose)=\"closeLightbox()\"></preview-lightbox>\n<file-preview-item\n    *ngFor=\"let file of previewFiles\"\n    [fileItem]=\"file\"\n    (removeFile)=\"removeFile.next($event)\"\n    (uploadSuccess)=\"uploadSuccess.next($event)\"\n    (uploadFail)=\"uploadFail.next($event)\"\n    (imageClicked)=\"openLightbox($event)\"\n    [itemTemplate]=\"itemTemplate\"\n    [adapter]=\"adapter\"\n    [captions]=\"captions\"\n    [enableAutoUpload]=\"enableAutoUpload\"\n></file-preview-item>\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { FilePreviewModel } from '../file-preview.model';\nimport { FilePickerAdapter } from '../file-picker.adapter';\nimport { UploaderCaptions } from '../uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'file-preview-container',\n  templateUrl: './file-preview-container.component.html',\n  styleUrls: ['./file-preview-container.component.scss']\n})\nexport class FilePreviewContainerComponent implements OnInit {\n  @Input() previewFiles: FilePreviewModel[];\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() enableAutoUpload: boolean;\n  @Output() public readonly removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  public lightboxFile: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() captions: UploaderCaptions;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  public openLightbox(file: FilePreviewModel): void {\n   this.lightboxFile = file;\n  }\n  public closeLightbox(): void {\n    this.lightboxFile = undefined;\n  }\n\n}\n","<div\n  (click)=\"fileInput.click()\"\n  class=\"file-drop-wrapper\"\n  *ngIf=\"showeDragDropZone\"\n>\n  <file-drop\n    (onFileDrop)=\"dropped($event)\"\n    [customstyle]=\"'custom-drag'\"\n    [captions]=\"captions\"\n  >\n    <ng-content select=\".dropzoneTemplate\"> </ng-content>\n  </file-drop>\n</div>\n\n<input\n  type=\"file\"\n  name=\"file[]\"\n  id=\"fileInput\"\n  #fileInput\n  [multiple]=\"uploadType === 'multi' ? 'multiple' : ''\"\n  (click)=\"fileInput.value = null\"\n  (change)=\"onChange(fileInput.files)\"\n  [accept]=\"accept\"\n  class=\"file-input\"\n/>\n\n<div class=\"cropperJsOverlay\" *ngIf=\"currentCropperFile\">\n<div class=\"cropperJsBox\">\n  <img\n    [src]=\"safeCropImgUrl\"\n    id=\"cropper-img\"\n    (load)=\"cropperImgLoaded($event)\"\n  />\n  <div class=\"cropper-actions\">\n    <button class=\"cropSubmit\" (click)=\"onCropSubmit()\" type=\"button\">\n      {{ captions?.cropper?.crop }}\n    </button>\n    <button\n      class=\"cropCancel\"\n      type=\"button\"\n      (click)=\"\n        closeCropper({\n          file: currentCropperFile,\n          fileName: currentCropperFile.name\n        })\n      \"\n    >\n      {{ captions?.cropper?.cancel }}\n    </button>\n  </div>\n</div>\n</div>\n\n<div\n  class=\"files-preview-wrapper\"\n  [ngClass]=\"{ 'visually-hidden': !showPreviewContainer }\"\n>\n  <file-preview-container\n    *ngIf=\"files\"\n    [previewFiles]=\"files\"\n    (removeFile)=\"removeFile($event)\"\n    (uploadSuccess)=\"onUploadSuccess($event)\"\n    (uploadFail)=\"onUploadFail($event)\"\n    [adapter]=\"adapter\"\n    [itemTemplate]=\"itemTemplate\"\n    [captions]=\"captions\"\n    [enableAutoUpload]=\"enableAutoUpload\"\n  >\n  </file-preview-container>\n</div>\n","import { FilePickerService } from './file-picker.service';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef\n} from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { FilePreviewModel } from './file-preview.model';\nimport { GET_FILE_CATEGORY_TYPE } from './file-upload.utils';\nimport { FileValidationTypes, ValidationError } from './validation-error.model';\nimport { FilePickerAdapter } from './file-picker.adapter';\nimport {\n  FileSystemDirectoryEntry,\n  FileSystemFileEntry,\n  UploadEvent\n} from './file-drop';\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DefaultCaptions } from './default-captions';\nimport { UploaderCaptions } from './uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { DEFAULT_CROPPER_OPTIONS, BITS_TO_MB } from './file-picker.constants';\n\ndeclare var Cropper;\n@Component({\n  selector: 'ngx-awesome-uploader',\n  templateUrl: './file-picker.component.html',\n  styleUrls: ['./file-picker.component.scss']\n})\nexport class FilePickerComponent implements OnInit, OnDestroy {\n  /** Emitted when file upload via api successfully. Emitted for every file */\n  @Output() readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted when file upload via api failed. Emitted for every file */\n  @Output() readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  /** Emitted when file is removed via api successfully. Emitted for every file */\n  @Output() readonly removeSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted on file validation fail */\n  @Output() readonly validationError = new EventEmitter<ValidationError>();\n  /** Emitted when file is added and passed validations. Not uploaded yet */\n  @Output() readonly fileAdded = new EventEmitter<FilePreviewModel>();\n  /** Emitted when file is removed from fileList */\n  @Output() readonly fileRemoved = new EventEmitter<FilePreviewModel>();\n  /** Custom validator function */\n  @Input() customValidator: (file: File) => Observable<boolean>;\n  /** Whether to enable cropper. Default: disabled */\n  @Input() enableCropper = false;\n  /** Whether to show default drag and drop zone. Default:true */\n  @Input() showeDragDropZone = true;\n  /** Whether to show default files preview container. Default: true */\n  @Input() showPreviewContainer = true;\n  /** Preview Item template */\n  @Input() itemTemplate: TemplateRef<any>;\n  /** Single or multiple. Default: multi */\n  @Input() uploadType = 'multi';\n  /** Max size of selected file in MB. Default: no limit */\n  @Input() fileMaxSize: number;\n  /** Max count of file in multi-upload. Default: no limit */\n  @Input() fileMaxCount: number;\n  /** Total Max size limit of all files in MB. Default: no limit */\n  @Input() totalMaxSize: number;\n  /** Which file types to show on choose file dialog. Default: show all */\n  @Input() accept: string;\n  /** File extensions filter */\n  @Input() fileExtensions: string[];\n  /** Cropper options. */\n  @Input() cropperOptions: object;\n  /** Cropped canvas options. */\n  @Input() croppedCanvasOptions: object = {};\n  /** Custom api Adapter for uploading/removing files */\n  @Input() adapter: FilePickerAdapter;\n  /**  Custome template for dropzone */\n  @Input() dropzoneTemplate: TemplateRef<any>;\n  /** Custom captions input. Used for multi language support */\n  @Input() captions: UploaderCaptions = DefaultCaptions;\n  /** captions object */\n  /** Whether to auto upload file on file choose or not. Default: true */\n  @Input() enableAutoUpload = true;\n  cropper: any;\n  public files: FilePreviewModel[] = [];\n  /** Files array for cropper. Will be shown equentially if crop enabled */\n  filesForCropper: File[] = [];\n  /** Current file to be shown in cropper */\n  public currentCropperFile: File;\n  public safeCropImgUrl: SafeResourceUrl;\n  private _cropClosed$ = new Subject<FilePreviewModel>();\n  private _onDestroy$ = new Subject<void>();\n  constructor(\n    private fileService: FilePickerService,\n    private elementRef: ElementRef\n  ) {}\n\n  public ngOnInit() {\n    this._setCropperOptions();\n    this._listenToCropClose();\n  }\n  public ngOnDestroy() {\n    this._onDestroy$.next();\n    this._onDestroy$.complete();\n  }\n  /** On input file selected */\n  public onChange(event: File[]) {\n    const files: File[] = Array.from(event);\n    this.handleFiles(files).subscribe();\n  }\n\n  /** On file dropped */\n  public dropped(event: UploadEvent) {\n    const files = event.files;\n    const filesForUpload: File[] = [];\n    for (const droppedFile of files) {\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          filesForUpload.push(file);\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n        // console.log(droppedFile.relativePath, fileEntry);\n      }\n    }\n    setTimeout(() => this.handleFiles(filesForUpload).subscribe());\n  }\n\n  /** Emits event when file upload api returns success  */\n  public onUploadSuccess(fileItem: FilePreviewModel): void {\n    this.uploadSuccess.next(fileItem);\n  }\n\n  /** Emits event when file upload api returns success  */\n  public onUploadFail(er: HttpErrorResponse): void {\n    this.uploadFail.next(er);\n  }\n\n  /** Emits event when file remove api returns success  */\n  public onRemoveSuccess(fileItem: FilePreviewModel): void {\n    this.removeSuccess.next(fileItem);\n    this.removeFileFromList(fileItem);\n  }\n\n  public getSafeUrl(file: File): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n\n  /** Removes file from UI and sends api */\n  public removeFile(fileItem: FilePreviewModel): void {\n    if (!this.enableAutoUpload) {\n      this.removeFileFromList(fileItem);\n      return;\n    }\n    if (this.adapter) {\n      this.adapter.removeFile(fileItem).subscribe(res => {\n        this.onRemoveSuccess(fileItem);\n      });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n\n  /** Listen when Cropper is closed and open new cropper if next image exists */\n  private _listenToCropClose() {\n    this._cropClosed$\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe((res: FilePreviewModel) => {\n        const croppedIndex = this.filesForCropper.findIndex(\n          item => item.name === res.fileName\n        );\n        const nextFile =\n          croppedIndex !== -1\n            ? this.filesForCropper[croppedIndex + 1]\n            : undefined;\n        this.filesForCropper = [...this.filesForCropper].filter(\n          item => item.name !== res.fileName\n        );\n        if (nextFile) {\n          this.openCropper(nextFile);\n        }\n      });\n  }\n  /** Sets custom cropper options if avaiable */\n  private _setCropperOptions() {\n    if (!this.cropperOptions) {\n      this._setDefaultCropperOptions();\n    }\n  }\n  /** Sets manual cropper options if no custom options are avaiable */\n  private _setDefaultCropperOptions() {\n    this.cropperOptions = DEFAULT_CROPPER_OPTIONS;\n  }\n\n  /** Handles input and drag/drop files */\n  handleFiles(files: File[]): Observable<void> {\n    if (!this.isValidMaxFileCount(files)) {\n      return of(null);\n    }\n    const isValidUploadSync = files.every(item => this._validateFileSync(item));\n    const asyncFunctions = files.map(item => this._validateFileAsync(item));\n    return combineLatest([...asyncFunctions]).pipe(\n      map(res => {\n        const isValidUploadAsync = res.every(result => result === true);\n        if (!isValidUploadSync || !isValidUploadAsync) {\n          return;\n        }\n        files.forEach((file: File, index: number) => {\n          this.handleInputFile(file, index);\n        });\n      })\n    );\n  }\n  /** Validates synchronous validations */\n  private _validateFileSync(file: File): boolean {\n    if (!file) {\n      return;\n    }\n    if (!this.isValidUploadType(file)) {\n      return;\n    }\n    if (!this.isValidExtension(file, file.name)) {\n      return;\n    }\n    return true;\n  }\n\n  /** Validates asynchronous validations */\n  private _validateFileAsync(file: File): Observable<boolean> {\n    if (!this.customValidator) {\n      return of(true);\n    }\n    return this.customValidator(file).pipe(\n      tap(res => {\n        if (!res) {\n          this.validationError.next({\n            file,\n            error: FileValidationTypes.customValidator\n          });\n        }\n      })\n    );\n  }\n\n  /** Handles input and drag&drop files */\n  handleInputFile(file: File, index): void {\n    const type = GET_FILE_CATEGORY_TYPE(file.type);\n    if (type === 'image' && this.enableCropper) {\n      this.filesForCropper.push(file);\n      if (!this.currentCropperFile) {\n        this.openCropper(file);\n      }\n    } else {\n      /** Size is not initially checked on handleInputFiles because of cropper size change */\n      if (this.isValidSize(file, file.size)) {\n        this.pushFile(file);\n      }\n    }\n  }\n\n  /** Validates if upload type is single so another file cannot be added */\n  isValidUploadType(file): boolean {\n    if (this.uploadType === 'single' && this.files.length > 0) {\n      this.validationError.next({\n        file,\n        error: FileValidationTypes.uploadType\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** Validates max file count */\n  isValidMaxFileCount(files: File[]): boolean {\n    if (!this.fileMaxCount || this.fileMaxCount >= this.files.length + files.length\n    ) {\n      return true;\n    } else {\n      this.validationError.next({\n        file: null,\n        error: FileValidationTypes.fileMaxCount\n      });\n      return false;\n    }\n  }\n\n  /** Add file to file list after succesfull validation */\n  pushFile(file: File, fileName = file.name): void {\n    this.files.push({ file, fileName });\n    this.fileAdded.next({ file, fileName });\n  }\n  /** Opens cropper for image crop */\n  openCropper(file: File): void {\n    if ((window as any).CROPPER  || typeof Cropper !== 'undefined') {\n      this.safeCropImgUrl = this.fileService.createSafeUrl(file);\n      this.currentCropperFile = file;\n    } else {\n      console.warn(\n        \"please import cropperjs script and styles to use cropper feature or disable it by setting [enableCropper]='false'\"\n      );\n      return;\n    }\n  }\n\n  /** On img load event */\n  cropperImgLoaded(e): void {\n    const image = document.getElementById('cropper-img');\n    this.cropper = new Cropper(image, this.cropperOptions);\n  }\n  /** Close or cancel cropper */\n  closeCropper(filePreview: FilePreviewModel): void {\n    this.currentCropperFile = undefined;\n    this.cropper = undefined;\n    setTimeout(() => this._cropClosed$.next(filePreview), 200);\n  }\n\n  /** Removes files from files list */\n  removeFileFromList(file: FilePreviewModel): void {\n    this.files = this.files.filter(f => f.fileName !== file.fileName);\n    this.fileRemoved.next(file);\n  }\n\n  /** Validates file extension */\n  isValidExtension(file: File, fileName: string): boolean {\n    if (!this.fileExtensions) {return true; }\n    const extension = fileName.split('.').pop();\n    const fileExtensions = this.fileExtensions.map(ext => ext.toLowerCase());\n    if (fileExtensions.indexOf(extension.toLowerCase()) === -1) {\n      this.validationError.next({file, error: FileValidationTypes.extensions});\n      return false;\n    }\n    return true;\n  }\n  /** Validates selected file size and total file size */\n  isValidSize(file: File, size: number): boolean {\n    /** Validating selected file size */\n    const res: number = BITS_TO_MB(size);\n    let isValidFileSize: boolean;\n    let isValidTotalFileSize: boolean;\n    if (!this.fileMaxSize || (this.fileMaxSize && res < this.fileMaxSize)) {\n      isValidFileSize = true;\n    } else {\n      this.validationError.next({\n        file,\n        error: FileValidationTypes.fileMaxSize\n      });\n    }\n    /** Validating Total Files Size */\n    const totalBits = this.files\n      .map(f => f.file ? f.file.size : 0)\n      .reduce((acc, curr) => acc + curr, 0);\n    if (\n      !this.totalMaxSize ||\n      (this.totalMaxSize &&\n        BITS_TO_MB(totalBits + file.size) < this.totalMaxSize)\n    ) {\n      isValidTotalFileSize = true;\n    } else {\n      this.validationError.next({\n        file,\n        error: FileValidationTypes.totalMaxSize\n      });\n    }\n    return !!isValidFileSize && isValidTotalFileSize;\n  }\n\n  /** when crop button submitted */\n  onCropSubmit(): void {\n    this.cropper\n      .getCroppedCanvas(this.croppedCanvasOptions)\n      .toBlob(this._blobFallBack.bind(this), 'image/png');\n  }\n  /** After crop submit */\n  private _blobFallBack(blob: Blob): void {\n    if (!blob) {\n      return;\n    }\n    if (this.isValidSize(blob as File, blob.size)) {\n      this.pushFile(blob as File, this.currentCropperFile.name);\n    }\n    this.closeCropper({\n      file: blob as File,\n      fileName: this.currentCropperFile.name\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FileComponent} from './file-drop.component';\nimport { CloudIconComponent } from '../icons/cloud-icon/cloud-icon.component';\n\n@NgModule({\n  declarations: [\n    FileComponent,\n    CloudIconComponent\n  ],\n  exports: [FileComponent],\n  imports: [CommonModule],\n  providers: [],\n  bootstrap: [FileComponent],\n})\nexport class FileDropModule {}\n","import { CloseIconComponent } from './icons/close-icon/close-icon.component';\nimport { FilePreviewItemComponent } from './file-preview-container/file-preview-item/file-preview-item.component';\nimport { FilePreviewContainerComponent } from './file-preview-container/file-preview-container.component';\nimport { NgModule } from '@angular/core';\nimport { FilePickerComponent } from './file-picker.component';\nimport { CommonModule } from '@angular/common';\nimport { FilePickerService } from './file-picker.service';\nimport { FileDropModule } from './file-drop/file-drop.module';\nimport { PreviewLightboxComponent } from './file-preview-container/preview-lightbox/preview-lightbox.component';\nimport { RefreshIconComponent } from './file-preview-container/file-preview-item/refresh-icon/refresh-icon.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FileDropModule,\n  ],\n  declarations: [\n    FilePickerComponent,\n    FilePreviewContainerComponent,\n    FilePreviewItemComponent,\n    PreviewLightboxComponent,\n    RefreshIconComponent,\n    CloseIconComponent\n  ],\n  exports: [FilePickerComponent],\n  providers: [FilePickerService]\n})\nexport class FilePickerModule {}\n"]}