{"version":3,"file":"ngx-awesome-uploader.js","sources":["../../../projects/file-picker/src/lib/file-picker.service.ts","../../../projects/file-picker/src/lib/file-upload.utils.ts","../../../projects/file-picker/src/lib/validation-error.model.ts","../../../projects/file-picker/src/lib/file-picker.adapter.ts","../../../projects/file-picker/src/lib/default-captions.ts","../../../projects/file-picker/src/lib/file-picker.constants.ts","../../../projects/file-picker/src/lib/file-drop/upload-file.model.ts","../../../projects/file-picker/src/lib/file-drop/upload-event.model.ts","../../../projects/file-picker/src/lib/icons/cloud-icon/cloud-icon.component.ts","../../../projects/file-picker/src/lib/icons/cloud-icon/cloud-icon.component.html","../../../projects/file-picker/src/lib/file-drop/file-drop.component.html","../../../projects/file-picker/src/lib/file-drop/file-drop.component.ts","../../../projects/file-picker/src/lib/icons/close-icon/close-icon.component.ts","../../../projects/file-picker/src/lib/icons/close-icon/close-icon.component.html","../../../projects/file-picker/src/lib/file-preview-container/preview-lightbox/preview-lightbox.component.ts","../../../projects/file-picker/src/lib/file-preview-container/preview-lightbox/preview-lightbox.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.ts","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/file-preview-item.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/file-preview-item.component.ts","../../../projects/file-picker/src/lib/file-preview-container/file-preview-container.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-container.component.ts","../../../projects/file-picker/src/lib/file-picker.component.html","../../../projects/file-picker/src/lib/file-picker.component.ts","../../../projects/file-picker/src/lib/file-drop/file-drop.module.ts","../../../projects/file-picker/src/lib/file-picker.module.ts","../../../projects/file-picker/src/public_api.ts","../../../projects/file-picker/src/ngx-awesome-uploader.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Injectable()\nexport class FilePickerService {\n  constructor(private sanitizer: DomSanitizer) { }\n  mockUploadFile(formData): Observable<any> {\n    const event = new CustomEvent('customevent', {\n      detail: {\n        type: 'UploadProgreess'\n      }\n    });\n    return of (event.detail);\n  }\n  createSafeUrl(file): SafeResourceUrl {\n    try {\n      const url = window.URL.createObjectURL(file);\n      const safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n      return safeUrl;\n    } catch (er) {\n      console.log(er);\n    }\n  }\n}\n","export function GET_FILE_CATEGORY_TYPE(fileExtension: string): string {\n  if (fileExtension.includes('image')) {\n    return 'image';\n  } else if (fileExtension.includes('video')) {\n    return 'video';\n  } else {\n    return 'other';\n  }\n}\n\nexport function GET_FILE_TYPE(name: string): string {\n  return name.substr(name.lastIndexOf('.') + 1).toUpperCase();\n}\n\nexport function IS_IMAGE_FILE(fileType: string): boolean {\n  const IMAGE_TYPES = ['PNG', 'JPG', 'JPEG', 'BMP', 'WEBP', 'JFIF', 'TIFF'];\n  return (IMAGE_TYPES as any).includes(fileType.toUpperCase());\n}\n","export interface ValidationError {\n  file: File;\n  error: string; // is FileValidationType enum type\n}\nexport enum FileValidationTypes {\n  fileMaxSize = 'FILE_MAX_SIZE',\n  fileMaxCount = 'FILE_MAX_COUNT',\n  totalMaxSize = 'TOTAL_MAX_SIZE',\n  extensions = 'EXTENSIONS',\n  uploadType = 'UPLOAD_TYPE',\n  customValidator = 'CUSTOM_VALIDATOR'\n}\n","import { FilePreviewModel } from './file-preview.model';\nimport { Observable } from 'rxjs';\n\nexport interface UploadResponse {\n    body?: any;\n    status: UploadStatus;\n    progress?: number;\n}\n\nexport enum UploadStatus {\n   UPLOADED = 'UPLOADED',\n   IN_PROGRESS = 'IN PROGRESS',\n   ERROR = 'ERROR'\n}\n\nexport abstract class FilePickerAdapter {\n public abstract uploadFile(fileItem: FilePreviewModel): Observable<UploadResponse>;\n public abstract removeFile(fileItem: FilePreviewModel): Observable<any>;\n}\n","import { UploaderCaptions } from './uploader-captions';\n\nexport const DefaultCaptions: UploaderCaptions = {\n    dropzone: {\n        title: 'Drag and drop file here',\n        or: 'or',\n        browse: 'Browse Files'\n    },\n    cropper: {\n        crop: 'Crop',\n        cancel: 'Cancel'\n    },\n    previewCard: {\n        remove: 'Remove',\n        uploadError: 'Error on upload'\n    }\n};\n","export const DEFAULT_CROPPER_OPTIONS = {\n    dragMode: 'crop',\n    aspectRatio: 1,\n    autoCrop: true,\n    movable: true,\n    zoomable: true,\n    scalable: true,\n    autoCropArea: 0.8\n};\n\nexport function BITS_TO_MB(size: number): number {\n   return parseFloat(size.toString()) / 1048576;\n}\n","import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\n\n/**\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\n * properties of the given {@link FileSystemEntry}.\n */\nexport class UploadFile {\n    constructor(\n        public relativePath: string,\n        public fileEntry: FileSystemEntry) {\n    }\n}\n","import { UploadFile } from './upload-file.model';\n\nexport class UploadEvent {\n    constructor(\n        public files: UploadFile[]) {\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cloud-icon',\n  templateUrl: './cloud-icon.component.html',\n  styleUrls: ['./cloud-icon.component.scss']\n})\nexport class CloudIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","    <!-- <div class=\"cloud-upload-icon\"><i></i></div> -->\n\n    <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"42px\" height=\"42px\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"/>\n    </svg>","<div id=\"dropZone\"  [className]=\"customstyle\" [class.over]=\"dragoverflag\"\n    (drop)=\"dropFiles($event)\"\n    (dragover)=\"onDragOver($event)\" (dragleave)=\"onDragLeave($event)\">\n\n    <div #ref class=\"custom-dropzone\" >\n      <ng-content></ng-content>\n      </div>\n\n    <div class=\"content\" *ngIf=\"ref.children?.length == 0\">\n             <cloud-icon class=\"cloud-icon\"></cloud-icon>\n              <div class=\"content-top-text\">\n                {{captions?.dropzone?.title}}\n              </div>\n              <div class=\"content-center-text\">\n                {{captions?.dropzone?.or}}\n              </div>\n              <button class=\"file-browse-button\" type=\"button\">\n                {{captions?.dropzone?.browse}}\n              </button>\n    </div>\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { timer, Subscription } from 'rxjs';\n\nimport { UploadFile } from './upload-file.model';\nimport { UploadEvent } from './upload-event.model';\nimport {\n  FileSystemFileEntry,\n  FileSystemEntry,\n  FileSystemDirectoryEntry\n} from './dom.types';\nimport { UploaderCaptions } from '../uploader-captions';\n\n@Component({\n  selector: 'file-drop',\n  templateUrl: './file-drop.component.html',\n  styleUrls: ['./file-drop.component.scss']\n})\nexport class FileComponent implements OnDestroy {\n  @Input()\n  captions: UploaderCaptions;\n  @Input()\n  customstyle: string = null;\n  @Input()\n  disableIf = false;\n\n  @Output()\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<UploadEvent>();\n  @Output()\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\n\n  stack = [];\n  files: UploadFile[] = [];\n  subscription: Subscription;\n  dragoverflag = false;\n\n  globalDisable = false;\n  globalStart: () => void;\n  globalEnd: () => void;\n\n  numOfActiveReadEntries = 0;\n  constructor(private zone: NgZone, private renderer: Renderer2) {\n    if (!this.customstyle) {\n      this.customstyle = 'drop-zone';\n    }\n    this.globalStart = this.renderer.listen('document', 'dragstart', evt => {\n      this.globalDisable = true;\n    });\n    this.globalEnd = this.renderer.listen('document', 'dragend', evt => {\n      this.globalDisable = false;\n    });\n  }\n  public onDragOver(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (!this.dragoverflag) {\n        this.dragoverflag = true;\n        this.onFileOver.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  public onDragLeave(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (this.dragoverflag) {\n        this.dragoverflag = false;\n        this.onFileLeave.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  dropFiles(event: any) {\n    if (!this.globalDisable && !this.disableIf) {\n      this.dragoverflag = false;\n      event.dataTransfer.dropEffect = 'copy';\n      let length;\n      if (event.dataTransfer.items) {\n        length = event.dataTransfer.items.length;\n      } else {\n        length = event.dataTransfer.files.length;\n      }\n\n      for (let i = 0; i < length; i++) {\n        let entry: FileSystemEntry;\n        if (event.dataTransfer.items) {\n          if (event.dataTransfer.items[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.items[i].webkitGetAsEntry();\n          }\n        } else {\n          if (event.dataTransfer.files[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.files[i].webkitGetAsEntry();\n          }\n        }\n        if (!entry) {\n          const file: File = event.dataTransfer.files[i];\n          if (file) {\n            const fakeFileEntry: FileSystemFileEntry = {\n              name: file.name,\n              isDirectory: false,\n              isFile: true,\n              file: (callback: (filea: File) => void): void => {\n                callback(file);\n              }\n            };\n            const toUpload: UploadFile = new UploadFile(\n              fakeFileEntry.name,\n              fakeFileEntry\n            );\n            this.addToQueue(toUpload);\n          }\n        } else {\n          if (entry.isFile) {\n            const toUpload: UploadFile = new UploadFile(entry.name, entry);\n            this.addToQueue(toUpload);\n          } else if (entry.isDirectory) {\n            this.traverseFileTree(entry, entry.name);\n          }\n        }\n      }\n\n      this.preventAndStop(event);\n\n      const timerObservable = timer(200, 200);\n      this.subscription = timerObservable.subscribe(t => {\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\n          this.onFileDrop.emit(new UploadEvent(this.files));\n          this.files = [];\n        }\n      });\n    }\n  }\n\n  private traverseFileTree(item: FileSystemEntry, path: string) {\n    if (item.isFile) {\n      const toUpload: UploadFile = new UploadFile(path, item);\n      this.files.push(toUpload);\n      this.zone.run(() => {\n        this.popToStack();\n      });\n    } else {\n      this.pushToStack(path);\n      path = path + '/';\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\n      let entries = [];\n      const thisObj = this;\n\n      const readEntries = () => {\n        thisObj.numOfActiveReadEntries++;\n        dirReader.readEntries((res) => {\n          if (!res.length) {\n            // add empty folders\n            if (entries.length === 0) {\n              const toUpload: UploadFile = new UploadFile(path, item);\n              thisObj.zone.run(() => {\n                thisObj.addToQueue(toUpload);\n              });\n            } else {\n              for (let i = 0; i < entries.length; i++) {\n                thisObj.zone.run(() => {\n                  thisObj.traverseFileTree(entries[i], path + entries[i].name);\n                });\n              }\n            }\n            thisObj.zone.run(() => {\n              thisObj.popToStack();\n            });\n          } else {\n            // continue with the reading\n            entries = entries.concat(res);\n            readEntries();\n          }\n          thisObj.numOfActiveReadEntries--;\n        });\n      };\n\n      readEntries();\n    }\n  }\n\n  private addToQueue(item: UploadFile) {\n    this.files.push(item);\n  }\n\n  pushToStack(str) {\n    this.stack.push(str);\n  }\n\n  popToStack() {\n    const value = this.stack.pop();\n  }\n\n  private clearQueue() {\n    this.files = [];\n  }\n\n  private preventAndStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.globalStart();\n    this.globalEnd();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'close-icon',\n  templateUrl: './close-icon.component.html',\n  styleUrls: ['./close-icon.component.scss']\n})\nexport class CloseIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\n width=\"18px\" height=\"18px\">\n <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n</svg>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FilePreviewModel } from '../../file-preview.model';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'preview-lightbox',\n  templateUrl: './preview-lightbox.component.html',\n  styleUrls: ['./preview-lightbox.component.scss']\n})\nexport class PreviewLightboxComponent implements OnInit {\n  @Input() file: FilePreviewModel;\n  @Output() previewClose = new EventEmitter<void>();\n  loaded: boolean;\n  safeUrl: SafeResourceUrl;\n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.getSafeUrl(this.file.file);\n  }\n  getSafeUrl(file: File | Blob): void {\n    const url = window.URL.createObjectURL(file);\n    this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n  onClose(event): void {\n   this.previewClose.next();\n  }\n\n}\n","<div class=\"ng-modal-backdrop\" (click)=\"onClose($event)\">\n\n</div>\n\n<div class=\"ng-modal-content\" >\n  <div class=\"close-icon-wrapper\" (click)=\"onClose($event)\">\n      <close-icon></close-icon>\n  </div>\n  <div class=\"lightbox-item\" >\n    <img [src]=\"safeUrl\" (load)=\"loaded = true\" [ngStyle]=\"{'visibility': loaded ? 'visible' : 'hidden'}\">\n  </div>\n </div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'refresh-icon',\n  templateUrl: './refresh-icon.component.html',\n  styleUrls: ['./refresh-icon.component.scss']\n})\nexport class RefreshIconComponent {\n\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/>\n</svg>","    <div class=\"file-preview-wrapper\" *ngIf=\"fileItem\" [ngClass] = \"{'visually-hidden': itemTemplate}\">\n\n\n        <div class=\"file-preview-thumbnail\">\n          <div class=\"img-preview-thumbnail\" *ngIf=\"isImageFile && fileItem?.file\" >\n            <img [src]=\"safeUrl\" (click)=\"imageClicked.next(fileItem)\">\n          </div>\n          <div class=\"other-preview-thumbnail\"\n            *ngIf=\"!isImageFile || !fileItem?.file\"\n            [ngClass]=\"fileItem.fileName.split('.').pop()\"\n            >\n            {{fileType}}\n          </div>\n          <div class=\"thumbnail-backdrop\">\n\n          </div>\n        </div>\n        <div class=\"file-preview-description\" >\n          <a class=\"file-preview-title\" [title]=\"fileItem.fileName\" href=\"javascript:void(0)\"><p>{{fileItem.fileName}}</p></a>\n          <div class=\"file-preview-size\" *ngIf=\"fileItem?.file\">{{niceBytes(fileItem.file?.size)}}</div>\n        </div>\n        <div class=\"file-preview-actions\" >\n            <div class=\"ngx-checkmark-wrapper\" *ngIf=\"!uploadError && !uploadProgress && fileItem?.file\">\n              <span class=\"ngx-checkmark\"></span>\n            </div>\n            <refresh-icon *ngIf=\"uploadError\" (click)=\"onRetry()\"></refresh-icon>\n            <a class=\"ngx-close-icon-wrapper\"\n            (click)=\"onRemove(fileItem)\"\n             title=\"{{captions?.previewCard?.remove}}\"\n             >\n              <close-icon class=\"ngx-close-icon\"></close-icon>\n            </a>\n        </div>\n          <a class=\"file-upload-error-wrapper\" *ngIf=\"uploadError && !uploadProgress\" href=\"javascipt:void(0)\"\n          title=\"{{captions?.previewCard?.uploadError}}\">\n          </a>\n\n        <ng-container *ngIf=\"uploadProgress\">\n        <div class=\"file-upload-progress-bar-wrapper\"  >\n          <div class=\"file-upload-progress-bar\"  [ngStyle]=\"{ 'width': uploadProgress + '%' }\">\n          </div>\n        </div>\n\n        <div class=\"file-upload-percentage-wrapper\" >\n          <div class=\"file-upload-percentage\">{{uploadProgress}} %</div>\n          </div>\n        </ng-container>\n\n      </div>\n\n<ng-container *ngTemplateOutlet=\"itemTemplate;context: {fileItem: fileItem, uploadProgress: uploadProgress}\" > </ng-container>\n","import { FilePickerService } from './../../file-picker.service';\nimport { FilePreviewModel } from './../../file-preview.model';\nimport { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { GET_FILE_CATEGORY_TYPE, GET_FILE_TYPE, IS_IMAGE_FILE } from '../../file-upload.utils';\nimport {  Subscription } from 'rxjs';\nimport { FilePickerAdapter, UploadResponse, UploadStatus } from '../../file-picker.adapter';\nimport { UploaderCaptions } from '../../uploader-captions';\n\n@Component({\n  selector: 'file-preview-item',\n  templateUrl: './file-preview-item.component.html',\n  styleUrls: ['./file-preview-item.component.scss']\n})\nexport class FilePreviewItemComponent implements OnInit {\n  @Output() public readonly removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  @Output() public readonly imageClicked = new EventEmitter<FilePreviewModel>();\n  @Input() public fileItem: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() captions: UploaderCaptions;\n  @Input() enableAutoUpload: boolean;\n  public uploadProgress: number;\n  public isImageFile: boolean;\n  public fileType: string;\n  public safeUrl: SafeResourceUrl;\n  public uploadError: boolean;\n  public uploadResponse: any;\n  private _uploadSubscription: Subscription;\n  constructor(\n    private fileService: FilePickerService,\n  ) {}\n\n  public ngOnInit() {\n    if (this.fileItem.file) {\n      if (this.fileItem.uploadResponse) {\n        this.uploadResponse = this.fileItem.uploadResponse;\n      } else {\n        this._uploadFile(this.fileItem);\n      }\n      this.safeUrl = this.getSafeUrl(this.fileItem.file);\n    }\n    this.fileType = GET_FILE_TYPE(this.fileItem.fileName);\n    this.isImageFile = IS_IMAGE_FILE(this.fileType);\n  }\n\n  public getSafeUrl(file: File | Blob): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n  /** Converts bytes to nice size */\n  niceBytes(x): string {\n    const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let l = 0;\n    let n = parseInt(x, 10) || 0;\n    while (n >= 1024 && ++l) {\n      n = n / 1024;\n    }\n    // include a decimal point and a tenths-place digit if presenting\n    // less than ten of KB or greater units\n    return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n  }\n  /** Retry file upload when upload was unsuccessfull */\n  public onRetry(): void {\n    this._uploadFile(this.fileItem);\n  }\n\n  public onRemove(fileItem: FilePreviewModel): void {\n    this._uploadUnsubscribe();\n    this.removeFile.next({\n      ...fileItem,\n      uploadResponse: this.uploadResponse\n    });\n   }\n\n  private _uploadFile(fileItem: FilePreviewModel): void {\n    if (!this.enableAutoUpload) {\n      return;\n    }\n    if (this.adapter) {\n      this._uploadSubscription =\n      this.adapter.uploadFile(fileItem)\n      .subscribe((res: UploadResponse) => {\n        if (res && res.status === UploadStatus.UPLOADED) {\n          this._onUploadSuccess(res.body, fileItem);\n          this.uploadProgress = undefined;\n        }\n        if (res && res.status === UploadStatus.IN_PROGRESS) {\n          this.uploadProgress = res.progress;\n        }\n        if (res && res.status === UploadStatus.ERROR) {\n          this.uploadError = true;\n          this.uploadFail.next(res.body);\n          this.uploadProgress = undefined;\n        }\n      }, (er: HttpErrorResponse) => {\n        this.uploadError = true;\n        this.uploadFail.next(er);\n        this.uploadProgress = undefined;\n  });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n  /** Emits event when file upload api returns success  */\n  private _onUploadSuccess(uploadResponse: any, fileItem: FilePreviewModel): void {\n    this.uploadResponse = uploadResponse;\n    this.fileItem.uploadResponse = uploadResponse;\n    this.uploadSuccess.next({...fileItem, uploadResponse});\n  }\n\n /** Cancel upload. Cancels request  */\n private _uploadUnsubscribe(): void {\n  if (this._uploadSubscription) {\n    this._uploadSubscription.unsubscribe();\n   }\n }\n\n}\n","<preview-lightbox *ngIf=\"lightboxFile\" [file]=\"lightboxFile\" (previewClose)=\"closeLightbox()\"></preview-lightbox>\n<file-preview-item\n    *ngFor=\"let file of previewFiles\"\n    [fileItem]=\"file\"\n    (removeFile)=\"removeFile.next($event)\"\n    (uploadSuccess)=\"uploadSuccess.next($event)\"\n    (uploadFail)=\"uploadFail.next($event)\"\n    (imageClicked)=\"openLightbox($event)\"\n    [itemTemplate]=\"itemTemplate\"\n    [adapter]=\"adapter\"\n    [captions]=\"captions\"\n    [enableAutoUpload]=\"enableAutoUpload\"\n></file-preview-item>\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { FilePreviewModel } from '../file-preview.model';\nimport { FilePickerAdapter } from '../file-picker.adapter';\nimport { UploaderCaptions } from '../uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'file-preview-container',\n  templateUrl: './file-preview-container.component.html',\n  styleUrls: ['./file-preview-container.component.scss']\n})\nexport class FilePreviewContainerComponent implements OnInit {\n  @Input() previewFiles: FilePreviewModel[];\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() enableAutoUpload: boolean;\n  @Output() public readonly removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  public lightboxFile: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() captions: UploaderCaptions;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  public openLightbox(file: FilePreviewModel): void {\n   this.lightboxFile = file;\n  }\n  public closeLightbox(): void {\n    this.lightboxFile = undefined;\n  }\n\n}\n","<div\n  (click)=\"fileInput.click()\"\n  class=\"file-drop-wrapper\"\n  *ngIf=\"showeDragDropZone\"\n>\n  <file-drop\n    (onFileDrop)=\"dropped($event)\"\n    [customstyle]=\"'custom-drag'\"\n    [captions]=\"captions\"\n  >\n    <ng-content select=\".dropzoneTemplate\"> </ng-content>\n  </file-drop>\n</div>\n\n<input\n  type=\"file\"\n  name=\"file[]\"\n  id=\"fileInput\"\n  #fileInput\n  [multiple]=\"uploadType === 'multi' ? 'multiple' : ''\"\n  (click)=\"fileInput.value = null\"\n  (change)=\"onChange(fileInput.files)\"\n  [accept]=\"accept\"\n  class=\"file-input\"\n/>\n\n<div class=\"cropperJsOverlay\" *ngIf=\"currentCropperFile\">\n<div class=\"cropperJsBox\">\n  <img\n    [src]=\"safeCropImgUrl\"\n    id=\"cropper-img\"\n    (load)=\"cropperImgLoaded($event)\"\n  />\n  <div class=\"cropper-actions\">\n    <button class=\"cropSubmit\" (click)=\"onCropSubmit()\" type=\"button\">\n      {{ captions?.cropper?.crop }}\n    </button>\n    <button\n      class=\"cropCancel\"\n      type=\"button\"\n      (click)=\"\n        closeCropper({\n          file: currentCropperFile,\n          fileName: currentCropperFile.name\n        })\n      \"\n    >\n      {{ captions?.cropper?.cancel }}\n    </button>\n  </div>\n</div>\n</div>\n\n<div\n  class=\"files-preview-wrapper\"\n  [ngClass]=\"{ 'visually-hidden': !showPreviewContainer }\"\n>\n  <file-preview-container\n    *ngIf=\"files\"\n    [previewFiles]=\"files\"\n    (removeFile)=\"removeFile($event)\"\n    (uploadSuccess)=\"onUploadSuccess($event)\"\n    (uploadFail)=\"onUploadFail($event)\"\n    [adapter]=\"adapter\"\n    [itemTemplate]=\"itemTemplate\"\n    [captions]=\"captions\"\n    [enableAutoUpload]=\"enableAutoUpload\"\n  >\n  </file-preview-container>\n</div>\n","import { FilePickerService } from './file-picker.service';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef\n} from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { FilePreviewModel } from './file-preview.model';\nimport { GET_FILE_CATEGORY_TYPE } from './file-upload.utils';\nimport { FileValidationTypes, ValidationError } from './validation-error.model';\nimport { FilePickerAdapter } from './file-picker.adapter';\nimport {\n  FileSystemDirectoryEntry,\n  FileSystemFileEntry,\n  UploadEvent\n} from './file-drop';\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DefaultCaptions } from './default-captions';\nimport { UploaderCaptions } from './uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { DEFAULT_CROPPER_OPTIONS, BITS_TO_MB } from './file-picker.constants';\n\ndeclare var Cropper;\n@Component({\n  selector: 'ngx-awesome-uploader',\n  templateUrl: './file-picker.component.html',\n  styleUrls: ['./file-picker.component.scss']\n})\nexport class FilePickerComponent implements OnInit, OnDestroy {\n  /** Emitted when file upload via api successfully. Emitted for every file */\n  @Output() readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted when file upload via api failed. Emitted for every file */\n  @Output() readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  /** Emitted when file is removed via api successfully. Emitted for every file */\n  @Output() readonly removeSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted on file validation fail */\n  @Output() readonly validationError = new EventEmitter<ValidationError>();\n  /** Emitted when file is added and passed validations. Not uploaded yet */\n  @Output() readonly fileAdded = new EventEmitter<FilePreviewModel>();\n  /** Emitted when file is removed from fileList */\n  @Output() readonly fileRemoved = new EventEmitter<FilePreviewModel>();\n  /** Custom validator function */\n  @Input() customValidator: (file: File) => Observable<boolean>;\n  /** Whether to enable cropper. Default: disabled */\n  @Input() enableCropper = false;\n  /** Whether to show default drag and drop zone. Default:true */\n  @Input() showeDragDropZone = true;\n  /** Whether to show default files preview container. Default: true */\n  @Input() showPreviewContainer = true;\n  /** Preview Item template */\n  @Input() itemTemplate: TemplateRef<any>;\n  /** Single or multiple. Default: multi */\n  @Input() uploadType = 'multi';\n  /** Max size of selected file in MB. Default: no limit */\n  @Input() fileMaxSize: number;\n  /** Max count of file in multi-upload. Default: no limit */\n  @Input() fileMaxCount: number;\n  /** Total Max size limit of all files in MB. Default: no limit */\n  @Input() totalMaxSize: number;\n  /** Which file types to show on choose file dialog. Default: show all */\n  @Input() accept: string;\n  /** File extensions filter */\n  @Input() fileExtensions: string[];\n  /** Cropper options. */\n  @Input() cropperOptions: object;\n  /** Cropped canvas options. */\n  @Input() croppedCanvasOptions: object = {};\n  /** Custom api Adapter for uploading/removing files */\n  @Input() adapter: FilePickerAdapter;\n  /**  Custome template for dropzone */\n  @Input() dropzoneTemplate: TemplateRef<any>;\n  /** Custom captions input. Used for multi language support */\n  @Input() captions: UploaderCaptions = DefaultCaptions;\n  /** captions object */\n  /** Whether to auto upload file on file choose or not. Default: true */\n  @Input() enableAutoUpload = true;\n  cropper: any;\n  public files: FilePreviewModel[] = [];\n  /** Files array for cropper. Will be shown equentially if crop enabled */\n  filesForCropper: File[] = [];\n  /** Current file to be shown in cropper */\n  public currentCropperFile: File;\n  public safeCropImgUrl: SafeResourceUrl;\n  private _cropClosed$ = new Subject<FilePreviewModel>();\n  private _onDestroy$ = new Subject<void>();\n  constructor(\n    private fileService: FilePickerService,\n    private elementRef: ElementRef\n  ) {}\n\n  public ngOnInit() {\n    this._setCropperOptions();\n    this._listenToCropClose();\n  }\n  public ngOnDestroy() {\n    this._onDestroy$.next();\n    this._onDestroy$.complete();\n  }\n  /** On input file selected */\n  public onChange(event: File[]) {\n    const files: File[] = Array.from(event);\n    this.handleFiles(files).subscribe();\n  }\n\n  /** On file dropped */\n  public dropped(event: UploadEvent) {\n    const files = event.files;\n    const filesForUpload: File[] = [];\n    for (const droppedFile of files) {\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          filesForUpload.push(file);\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n        // console.log(droppedFile.relativePath, fileEntry);\n      }\n    }\n    setTimeout(() => this.handleFiles(filesForUpload).subscribe());\n  }\n\n  /** Emits event when file upload api returns success  */\n  public onUploadSuccess(fileItem: FilePreviewModel): void {\n    this.uploadSuccess.next(fileItem);\n  }\n\n  /** Emits event when file upload api returns success  */\n  public onUploadFail(er: HttpErrorResponse): void {\n    this.uploadFail.next(er);\n  }\n\n  /** Emits event when file remove api returns success  */\n  public onRemoveSuccess(fileItem: FilePreviewModel): void {\n    this.removeSuccess.next(fileItem);\n    this.removeFileFromList(fileItem);\n  }\n\n  public getSafeUrl(file: File): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n\n  /** Removes file from UI and sends api */\n  public removeFile(fileItem: FilePreviewModel): void {\n    if (!this.enableAutoUpload) {\n      this.removeFileFromList(fileItem);\n      return;\n    }\n    if (this.adapter) {\n      this.adapter.removeFile(fileItem).subscribe(res => {\n        this.onRemoveSuccess(fileItem);\n      });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n\n  /** Listen when Cropper is closed and open new cropper if next image exists */\n  private _listenToCropClose() {\n    this._cropClosed$\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe((res: FilePreviewModel) => {\n        const croppedIndex = this.filesForCropper.findIndex(\n          item => item.name === res.fileName\n        );\n        const nextFile =\n          croppedIndex !== -1\n            ? this.filesForCropper[croppedIndex + 1]\n            : undefined;\n        this.filesForCropper = [...this.filesForCropper].filter(\n          item => item.name !== res.fileName\n        );\n        if (nextFile) {\n          this.openCropper(nextFile);\n        }\n      });\n  }\n  /** Sets custom cropper options if avaiable */\n  private _setCropperOptions() {\n    if (!this.cropperOptions) {\n      this._setDefaultCropperOptions();\n    }\n  }\n  /** Sets manual cropper options if no custom options are avaiable */\n  private _setDefaultCropperOptions() {\n    this.cropperOptions = DEFAULT_CROPPER_OPTIONS;\n  }\n\n  /** Handles input and drag/drop files */\n  handleFiles(files: File[]): Observable<void> {\n    if (!this.isValidMaxFileCount(files)) {\n      return of(null);\n    }\n    const isValidUploadSync = files.every(item => this._validateFileSync(item));\n    const asyncFunctions = files.map(item => this._validateFileAsync(item));\n    return combineLatest([...asyncFunctions]).pipe(\n      map(res => {\n        const isValidUploadAsync = res.every(result => result === true);\n        if (!isValidUploadSync || !isValidUploadAsync) {\n          return;\n        }\n        files.forEach((file: File, index: number) => {\n          this.handleInputFile(file, index);\n        });\n      })\n    );\n  }\n  /** Validates synchronous validations */\n  private _validateFileSync(file: File): boolean {\n    if (!file) {\n      return;\n    }\n    if (!this.isValidUploadType(file)) {\n      return;\n    }\n    if (!this.isValidExtension(file, file.name)) {\n      return;\n    }\n    return true;\n  }\n\n  /** Validates asynchronous validations */\n  private _validateFileAsync(file: File): Observable<boolean> {\n    if (!this.customValidator) {\n      return of(true);\n    }\n    return this.customValidator(file).pipe(\n      tap(res => {\n        if (!res) {\n          this.validationError.next({\n            file,\n            error: FileValidationTypes.customValidator\n          });\n        }\n      })\n    );\n  }\n\n  /** Handles input and drag&drop files */\n  handleInputFile(file: File, index): void {\n    const type = GET_FILE_CATEGORY_TYPE(file.type);\n    if (type === 'image' && this.enableCropper) {\n      this.filesForCropper.push(file);\n      if (!this.currentCropperFile) {\n        this.openCropper(file);\n      }\n    } else {\n      /** Size is not initially checked on handleInputFiles because of cropper size change */\n      if (this.isValidSize(file, file.size)) {\n        this.pushFile(file);\n      }\n    }\n  }\n\n  /** Validates if upload type is single so another file cannot be added */\n  isValidUploadType(file): boolean {\n    if (this.uploadType === 'single' && this.files.length > 0) {\n      this.validationError.next({\n        file,\n        error: FileValidationTypes.uploadType\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** Validates max file count */\n  isValidMaxFileCount(files: File[]): boolean {\n    if (!this.fileMaxCount || this.fileMaxCount >= this.files.length + files.length\n    ) {\n      return true;\n    } else {\n      this.validationError.next({\n        file: null,\n        error: FileValidationTypes.fileMaxCount\n      });\n      return false;\n    }\n  }\n\n  /** Add file to file list after succesfull validation */\n  pushFile(file: File, fileName = file.name): void {\n    this.files.push({ file, fileName });\n    this.fileAdded.next({ file, fileName });\n  }\n  /** Opens cropper for image crop */\n  openCropper(file: File): void {\n    if ((window as any).CROPPER  || typeof Cropper !== 'undefined') {\n      this.safeCropImgUrl = this.fileService.createSafeUrl(file);\n      this.currentCropperFile = file;\n    } else {\n      console.warn(\n        \"please import cropperjs script and styles to use cropper feature or disable it by setting [enableCropper]='false'\"\n      );\n      return;\n    }\n  }\n\n  /** On img load event */\n  cropperImgLoaded(e): void {\n    const image = document.getElementById('cropper-img');\n    this.cropper = new Cropper(image, this.cropperOptions);\n  }\n  /** Close or cancel cropper */\n  closeCropper(filePreview: FilePreviewModel): void {\n    this.currentCropperFile = undefined;\n    this.cropper = undefined;\n    setTimeout(() => this._cropClosed$.next(filePreview), 200);\n  }\n\n  /** Removes files from files list */\n  removeFileFromList(file: FilePreviewModel): void {\n    this.files = this.files.filter(f => f.fileName !== file.fileName);\n    this.fileRemoved.next(file);\n  }\n\n  /** Validates file extension */\n  isValidExtension(file: File, fileName: string): boolean {\n    if (!this.fileExtensions) {return true; }\n    const extension = fileName.split('.').pop();\n    const fileExtensions = this.fileExtensions.map(ext => ext.toLowerCase());\n    if (fileExtensions.indexOf(extension.toLowerCase()) === -1) {\n      this.validationError.next({file, error: FileValidationTypes.extensions});\n      return false;\n    }\n    return true;\n  }\n  /** Validates selected file size and total file size */\n  isValidSize(file: File, size: number): boolean {\n    /** Validating selected file size */\n    const res: number = BITS_TO_MB(size);\n    let isValidFileSize: boolean;\n    let isValidTotalFileSize: boolean;\n    if (!this.fileMaxSize || (this.fileMaxSize && res < this.fileMaxSize)) {\n      isValidFileSize = true;\n    } else {\n      this.validationError.next({\n        file,\n        error: FileValidationTypes.fileMaxSize\n      });\n    }\n    /** Validating Total Files Size */\n    const totalBits = this.files\n      .map(f => f.file ? f.file.size : 0)\n      .reduce((acc, curr) => acc + curr, 0);\n    if (\n      !this.totalMaxSize ||\n      (this.totalMaxSize &&\n        BITS_TO_MB(totalBits + file.size) < this.totalMaxSize)\n    ) {\n      isValidTotalFileSize = true;\n    } else {\n      this.validationError.next({\n        file,\n        error: FileValidationTypes.totalMaxSize\n      });\n    }\n    return !!isValidFileSize && isValidTotalFileSize;\n  }\n\n  /** when crop button submitted */\n  onCropSubmit(): void {\n    this.cropper\n      .getCroppedCanvas(this.croppedCanvasOptions)\n      .toBlob(this._blobFallBack.bind(this), 'image/png');\n  }\n  /** After crop submit */\n  private _blobFallBack(blob: Blob): void {\n    if (!blob) {\n      return;\n    }\n    if (this.isValidSize(blob as File, blob.size)) {\n      this.pushFile(blob as File, this.currentCropperFile.name);\n    }\n    this.closeCropper({\n      file: blob as File,\n      fileName: this.currentCropperFile.name\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FileComponent} from './file-drop.component';\nimport { CloudIconComponent } from '../icons/cloud-icon/cloud-icon.component';\n\n@NgModule({\n  declarations: [\n    FileComponent,\n    CloudIconComponent\n  ],\n  exports: [FileComponent],\n  imports: [CommonModule],\n  providers: [],\n  bootstrap: [FileComponent],\n})\nexport class FileDropModule {}\n","import { CloseIconComponent } from './icons/close-icon/close-icon.component';\nimport { FilePreviewItemComponent } from './file-preview-container/file-preview-item/file-preview-item.component';\nimport { FilePreviewContainerComponent } from './file-preview-container/file-preview-container.component';\nimport { NgModule } from '@angular/core';\nimport { FilePickerComponent } from './file-picker.component';\nimport { CommonModule } from '@angular/common';\nimport { FilePickerService } from './file-picker.service';\nimport { FileDropModule } from './file-drop/file-drop.module';\nimport { PreviewLightboxComponent } from './file-preview-container/preview-lightbox/preview-lightbox.component';\nimport { RefreshIconComponent } from './file-preview-container/file-preview-item/refresh-icon/refresh-icon.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FileDropModule,\n  ],\n  declarations: [\n    FilePickerComponent,\n    FilePreviewContainerComponent,\n    FilePreviewItemComponent,\n    PreviewLightboxComponent,\n    RefreshIconComponent,\n    CloseIconComponent\n  ],\n  exports: [FilePickerComponent],\n  providers: [FilePickerService]\n})\nexport class FilePickerModule {}\n","/*\n * Public API Surface of file-picker\n */\n\nexport * from './lib/file-picker.service';\nexport * from './lib/file-picker.component';\nexport * from './lib/file-picker.module';\nexport * from './lib/file-picker.adapter';\nexport * from './lib/file-preview.model';\nexport * from './lib/validation-error.model';\nexport * from './lib/uploader-captions';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0.ɵɵnamespaceSVG","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵlistener","i0.ɵɵprojection","i0.ɵɵtemplate","i0.ɵɵclassProp","i0.ɵɵproperty","i0.ɵɵtextInterpolate","i0.ɵɵpropertyInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵelementContainer"],"mappings":"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"}